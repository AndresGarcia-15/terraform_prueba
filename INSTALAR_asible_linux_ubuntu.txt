sudo apt update
sudo apt upgrade -y
sudo apt install ansible -y
ansible --version



## ansible-playbook -i inventory nginx.yaml --private-key=/home/ubuntu/private_key.pem
comando para correrlo correctamente
### maquina local.
scp -i "C:/Users/Andres/OneDrive - Universidad Tecnológica de Bolívar/Documentos/Infraestrucutra para TI/terraform_prueba/keys/private_key.pem" "C:/Users/Andres/OneDrive - Universidad Tecnológica de Bolívar/Documentos/Infraestrucutra para TI/terraform_prueba/keys/private_key.pem" ubuntu@100.28.128.223:ansible_nginx_setup/
private_key.pem

ls -l /home/ubuntu/blockstellart1.pem

chmod 600 /home/ubuntu/blockstellart1.pem
cd ~/.ssh



## a partir de la llave privada, se extrae la publica
ssh-keygen -y -f "C:\Users\Andres\OneDrive - Universidad Tecnológica de Bolívar\Documentos\Infraestrucutra para TI\terraform_prueba\keys\blockstellart1.pem" > "C:\Users\Andres\OneDrive - Universidad Tecnológica de Bolívar\Documentos\Infraestrucutra para TI\terraform_prueba\keys\blockstellart1.pub"

##Agregar llave publica
mkdir -p ~/.ssh
touch ~/.ssh/authorized_keys
chmod 700 ~/.ssh
chmod 600 ~/.ssh/authorized_keys
nano ~/.ssh/authorized_keys
Pega el contenido de blockstellart1.pub en el archivo, guarda y cierra el editor.


comenzar a crear el directorio para correr el ansible
mkdir ~/ansible_nginx_setup
cd ~/ansible_nginx_setup

nano ansible_vars.yaml
---
http_host: "example.com"
http_conf: "example.com.conf"
http_port: "80"

nano inventory
[servers]
server1 ansible_host=YOUR_EC2_PUBLIC_IP

[all:vars]
ansible_python_interpreter=/usr/bin/python3

nano nginx.conf.j2

server {
    listen {{ http_port }};
    root /var/www/html;
    index index.php index.html index.htm index.nginx-debian.html;
    server_name {{ http_host }};

    location / {
        try_files $uri $uri/ =404;
    }

    location ~ \.php$ {
        include snippets/fastcgi-php.conf;
        fastcgi_pass unix:/var/run/php/php-fpm.sock;
    }

    location ~ /\.ht {
        deny all;
    }
}

nano nginx.yaml

---
- name: Install Nginx Server
  hosts: all
  remote_user: ubuntu
  become: yes
  vars_files:
   - ansible_vars.yaml
  tasks:
  - name: Install Nginx and PHP Packages
    apt:
      name={{ item }}
      update_cache=yes
      state=latest
    loop:
      - nginx
      - php-fpm
  
  - name: Make sure Nginx service is running
    systemd:
      state: started
      name: nginx
      
  - name: Sets Nginx conf file
    template:
      src: "nginx.conf.j2"
      dest: "/etc/nginx/sites-available/{{ http_conf }}"

  - name: Enables new site
    file:
      src: "/etc/nginx/sites-available/{{ http_conf }}"
      dest: "/etc/nginx/sites-enabled/{{ http_conf }}"
      state: link
    notify: Reload Nginx

  - name: Removes "default" site
    file:
      path: "/etc/nginx/sites-enabled/default"
      state: absent
    notify: Restart Nginx
    
  - name: Sets Up PHP Info Page
    template:
      src: "test.php"
      dest: "/var/www/html/test.php"

  handlers:
    - name: Reload Nginx
      service:
        name: nginx
        state: reloaded

    - name: Restart Nginx
      service:
        name: nginx
        state: restarted

nano test.php
<?php
phpinfo();
?>


sudo nano /etc/ssh/sshd_config
PermitRootLogin prohibit-password
PasswordAuthentication no
PubkeyAuthentication yes
AuthorizedKeysFile %h/.ssh/authorized_keys
sudo systemctl restart ssh
# Asegúrate de que el directorio .ssh tenga permisos 700
chmod 700 ~/.ssh

# Asegúrate de que el archivo authorized_keys tenga permisos 600
chmod 600 ~/.ssh/authorized_keys

### verificar permisos 
ls -l



chmod 600 /home/ubuntu/private_key.pem
